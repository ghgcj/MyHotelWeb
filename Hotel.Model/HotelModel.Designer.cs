//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("CZBKHotelDBModel", "FK_CustomerOrder", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Hotel.Model.Customer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Hotel.Model.Order), true)]

#endregion

namespace Hotel.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class CZBKHotelDBEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“CZBKHotelDBEntities”部分中的连接字符串初始化新 CZBKHotelDBEntities 对象。
        /// </summary>
        public CZBKHotelDBEntities() : base("name=CZBKHotelDBEntities", "CZBKHotelDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CZBKHotelDBEntities 对象。
        /// </summary>
        public CZBKHotelDBEntities(string connectionString) : base(connectionString, "CZBKHotelDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CZBKHotelDBEntities 对象。
        /// </summary>
        public CZBKHotelDBEntities(EntityConnection connection) : base(connection, "CZBKHotelDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Order> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<Order>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<Order> _Order;

        #endregion

        //#region AddTo 方法
    
        ///// <summary>
        ///// 用于向 Customer EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        ///// </summary>
        //public void AddToCustomer(Customer customer)
        //{
        //    base.AddObject("Customer", customer);
        //}
    
        ///// <summary>
        ///// 用于向 Order EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        ///// </summary>
        //public void AddToOrder(Order order)
        //{
        //    base.AddObject("Order", order);
        //}

        //#endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CZBKHotelDBModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Customer 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="remark">Remark 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String remark, global::System.String name)
        {
            Customer customer = new Customer();
            customer.ID = id;
            customer.Remark = remark;
            customer.Name = name;
            return customer;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CZBKHotelDBModel", "FK_CustomerOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("CZBKHotelDBModel.FK_CustomerOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("CZBKHotelDBModel.FK_CustomerOrder", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CZBKHotelDBModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Order 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="orderName">OrderName 属性的初始值。</param>
        /// <param name="orderContent">OrderContent 属性的初始值。</param>
        /// <param name="customerID">CustomerID 属性的初始值。</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.String orderName, global::System.String orderContent, global::System.Int32 customerID)
        {
            Order order = new Order();
            order.ID = id;
            order.OrderName = orderName;
            order.OrderContent = orderContent;
            order.CustomerID = customerID;
            return order;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderName
        {
            get
            {
                return _OrderName;
            }
            set
            {
                OnOrderNameChanging(value);
                ReportPropertyChanging("OrderName");
                _OrderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderName");
                OnOrderNameChanged();
            }
        }
        private global::System.String _OrderName;
        partial void OnOrderNameChanging(global::System.String value);
        partial void OnOrderNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderContent
        {
            get
            {
                return _OrderContent;
            }
            set
            {
                OnOrderContentChanging(value);
                ReportPropertyChanging("OrderContent");
                _OrderContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderContent");
                OnOrderContentChanged();
            }
        }
        private global::System.String _OrderContent;
        partial void OnOrderContentChanging(global::System.String value);
        partial void OnOrderContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CZBKHotelDBModel", "FK_CustomerOrder", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CZBKHotelDBModel.FK_CustomerOrder", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CZBKHotelDBModel.FK_CustomerOrder", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("CZBKHotelDBModel.FK_CustomerOrder", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("CZBKHotelDBModel.FK_CustomerOrder", "Customer", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
